@model Weather_Monitoring_Application.Models.WeatherResponse

@{
    ViewData["Title"] = "Details";
}

<div >
    <h1>View the Weather</h1><p class="opacity-75">Check the weather data here</p><hr />
    <h3><strong>@Model.Location?.City, @Model.Location?.State @Model.Location?.Zipcode</strong></h3>
</div>

<div id="weatherdata">
    (Longitude, Latitude) = (@Model.Longitude.ToString("F2"), @Model.Latitude.ToString("F2"))
    <canvas id="myChart"></canvas>
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model.Location?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('myChart');
    var times = @Html.Raw(Json.Serialize(Model.Hourly.Time)); // Times array
    var temperatures = @Html.Raw(Json.Serialize(Model.Hourly.Temperature_2m)); // Temperatures array

    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: times, // X-axis labels from the time array
            datasets: [{
                label: 'Temperature (°C)',
                data: temperatures, // Y-axis data from the temperatures array
                backgroundColor: '#95d0fe',
                borderColor: '#95d0fe',
                borderWidth: 1
            }]
        },
        
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    grid: {
                        color: 'rgba(200, 200, 200, 0.5)' // Gridline color
                    }
                },
                x: {
                    grid: {
                        color: 'rgba(200, 200, 200, 0.5)' // Gridline color for X-axis
                    }
                }
            }
        }
    });

</script>